version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: blog_db
    environment:
      POSTGRES_DB: blog_db
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: sinaloa03
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blog_network

  # Backend Flask
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog_backend
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://blog_user:sinaloa03@db:5432/blog_db
      - JWT_SECRET_KEY=1f6ca6ee2f52d51fe7b1ff2ec99d4b5dff2384b22fc52dbc699330f2ad26a71f
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - blog_network
    restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - blog_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  blog_network:
    driver: bridge
