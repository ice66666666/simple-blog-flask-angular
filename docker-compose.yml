services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: blog_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog_network

  # Backend Flask
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog_backend
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - DATABASE_URL=${URL_BASE_DATOS}
      - JWT_SECRET_KEY=${JWT_SECRETO}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - blog_network
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - blog_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  blog_network:
    driver: bridge